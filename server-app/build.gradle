buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'java'
	id 'war'
}

apply plugin: 'io.spring.dependency-management'


group = 'org.dmsv'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	compile(group: 'org.postgresql', name: 'postgresql', version: '42.0.0')
	compile("org.liquibase:liquibase-core")

	compile 'com.github.jsimone:webapp-runner:8.5.11.3'
	compile group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '2.1.3.RELEASE', ext: 'pom'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

task stage() {
	dependsOn clean, war
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
	into "$buildDir/server"
	from(configurations.compile) {
		include "webapp-runner*"
	}
}

stage.dependsOn(copyToLib)